/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.softwerke.srv.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.softwerke.srv.model.MyReview;
import com.softwerke.srv.model.MyReviewModel;
import com.softwerke.srv.model.MyReviewSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the MyReview service. Represents a row in the &quot;journal_MyReview&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.softwerke.srv.model.MyReviewModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MyReviewImpl}.
 * </p>
 *
 * @author Sasha
 * @see MyReviewImpl
 * @see com.softwerke.srv.model.MyReview
 * @see com.softwerke.srv.model.MyReviewModel
 * @generated
 */
@JSON(strict = true)
public class MyReviewModelImpl extends BaseModelImpl<MyReview>
	implements MyReviewModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a my review model instance should use the {@link com.softwerke.srv.model.MyReview} interface instead.
	 */
	public static final String TABLE_NAME = "journal_MyReview";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "myReviewId", Types.BIGINT },
			{ "myReviewDateCreation", Types.TIMESTAMP },
			{ "myReviewDateModification", Types.TIMESTAMP },
			{ "myReviewArticleId", Types.BIGINT },
			{ "MyReviewName", Types.VARCHAR },
			{ "MyReviewContent", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table journal_MyReview (uuid_ VARCHAR(75) null,myReviewId LONG not null primary key,myReviewDateCreation DATE null,myReviewDateModification DATE null,myReviewArticleId LONG,MyReviewName VARCHAR(75) null,MyReviewContent VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table journal_MyReview";
	public static final String ORDER_BY_JPQL = " ORDER BY myReview.myReviewId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY journal_MyReview.myReviewId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.softwerke.srv.model.MyReview"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.softwerke.srv.model.MyReview"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.softwerke.srv.model.MyReview"),
			true);
	public static long UUID_COLUMN_BITMASK = 1L;
	public static long MYREVIEWID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static MyReview toModel(MyReviewSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		MyReview model = new MyReviewImpl();

		model.setUuid(soapModel.getUuid());
		model.setMyReviewId(soapModel.getMyReviewId());
		model.setMyReviewDateCreation(soapModel.getMyReviewDateCreation());
		model.setMyReviewDateModification(soapModel.getMyReviewDateModification());
		model.setMyReviewArticleId(soapModel.getMyReviewArticleId());
		model.setMyReviewName(soapModel.getMyReviewName());
		model.setMyReviewContent(soapModel.getMyReviewContent());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<MyReview> toModels(MyReviewSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<MyReview> models = new ArrayList<MyReview>(soapModels.length);

		for (MyReviewSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.softwerke.srv.model.MyReview"));

	public MyReviewModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _myReviewId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setMyReviewId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _myReviewId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return MyReview.class;
	}

	@Override
	public String getModelClassName() {
		return MyReview.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("myReviewId", getMyReviewId());
		attributes.put("myReviewDateCreation", getMyReviewDateCreation());
		attributes.put("myReviewDateModification", getMyReviewDateModification());
		attributes.put("myReviewArticleId", getMyReviewArticleId());
		attributes.put("MyReviewName", getMyReviewName());
		attributes.put("MyReviewContent", getMyReviewContent());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long myReviewId = (Long)attributes.get("myReviewId");

		if (myReviewId != null) {
			setMyReviewId(myReviewId);
		}

		Date myReviewDateCreation = (Date)attributes.get("myReviewDateCreation");

		if (myReviewDateCreation != null) {
			setMyReviewDateCreation(myReviewDateCreation);
		}

		Date myReviewDateModification = (Date)attributes.get(
				"myReviewDateModification");

		if (myReviewDateModification != null) {
			setMyReviewDateModification(myReviewDateModification);
		}

		Long myReviewArticleId = (Long)attributes.get("myReviewArticleId");

		if (myReviewArticleId != null) {
			setMyReviewArticleId(myReviewArticleId);
		}

		String MyReviewName = (String)attributes.get("MyReviewName");

		if (MyReviewName != null) {
			setMyReviewName(MyReviewName);
		}

		String MyReviewContent = (String)attributes.get("MyReviewContent");

		if (MyReviewContent != null) {
			setMyReviewContent(MyReviewContent);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getMyReviewId() {
		return _myReviewId;
	}

	@Override
	public void setMyReviewId(long myReviewId) {
		_myReviewId = myReviewId;
	}

	@JSON
	@Override
	public Date getMyReviewDateCreation() {
		return _myReviewDateCreation;
	}

	@Override
	public void setMyReviewDateCreation(Date myReviewDateCreation) {
		_myReviewDateCreation = myReviewDateCreation;
	}

	@JSON
	@Override
	public Date getMyReviewDateModification() {
		return _myReviewDateModification;
	}

	@Override
	public void setMyReviewDateModification(Date myReviewDateModification) {
		_myReviewDateModification = myReviewDateModification;
	}

	@JSON
	@Override
	public long getMyReviewArticleId() {
		return _myReviewArticleId;
	}

	@Override
	public void setMyReviewArticleId(long myReviewArticleId) {
		_myReviewArticleId = myReviewArticleId;
	}

	@JSON
	@Override
	public String getMyReviewName() {
		if (_MyReviewName == null) {
			return StringPool.BLANK;
		}
		else {
			return _MyReviewName;
		}
	}

	@Override
	public void setMyReviewName(String MyReviewName) {
		_MyReviewName = MyReviewName;
	}

	@JSON
	@Override
	public String getMyReviewContent() {
		if (_MyReviewContent == null) {
			return StringPool.BLANK;
		}
		else {
			return _MyReviewContent;
		}
	}

	@Override
	public void setMyReviewContent(String MyReviewContent) {
		_MyReviewContent = MyReviewContent;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			MyReview.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public MyReview toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (MyReview)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MyReviewImpl myReviewImpl = new MyReviewImpl();

		myReviewImpl.setUuid(getUuid());
		myReviewImpl.setMyReviewId(getMyReviewId());
		myReviewImpl.setMyReviewDateCreation(getMyReviewDateCreation());
		myReviewImpl.setMyReviewDateModification(getMyReviewDateModification());
		myReviewImpl.setMyReviewArticleId(getMyReviewArticleId());
		myReviewImpl.setMyReviewName(getMyReviewName());
		myReviewImpl.setMyReviewContent(getMyReviewContent());

		myReviewImpl.resetOriginalValues();

		return myReviewImpl;
	}

	@Override
	public int compareTo(MyReview myReview) {
		long primaryKey = myReview.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof MyReview)) {
			return false;
		}

		MyReview myReview = (MyReview)obj;

		long primaryKey = myReview.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		MyReviewModelImpl myReviewModelImpl = this;

		myReviewModelImpl._originalUuid = myReviewModelImpl._uuid;

		myReviewModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<MyReview> toCacheModel() {
		MyReviewCacheModel myReviewCacheModel = new MyReviewCacheModel();

		myReviewCacheModel.uuid = getUuid();

		String uuid = myReviewCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			myReviewCacheModel.uuid = null;
		}

		myReviewCacheModel.myReviewId = getMyReviewId();

		Date myReviewDateCreation = getMyReviewDateCreation();

		if (myReviewDateCreation != null) {
			myReviewCacheModel.myReviewDateCreation = myReviewDateCreation.getTime();
		}
		else {
			myReviewCacheModel.myReviewDateCreation = Long.MIN_VALUE;
		}

		Date myReviewDateModification = getMyReviewDateModification();

		if (myReviewDateModification != null) {
			myReviewCacheModel.myReviewDateModification = myReviewDateModification.getTime();
		}
		else {
			myReviewCacheModel.myReviewDateModification = Long.MIN_VALUE;
		}

		myReviewCacheModel.myReviewArticleId = getMyReviewArticleId();

		myReviewCacheModel.MyReviewName = getMyReviewName();

		String MyReviewName = myReviewCacheModel.MyReviewName;

		if ((MyReviewName != null) && (MyReviewName.length() == 0)) {
			myReviewCacheModel.MyReviewName = null;
		}

		myReviewCacheModel.MyReviewContent = getMyReviewContent();

		String MyReviewContent = myReviewCacheModel.MyReviewContent;

		if ((MyReviewContent != null) && (MyReviewContent.length() == 0)) {
			myReviewCacheModel.MyReviewContent = null;
		}

		return myReviewCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", myReviewId=");
		sb.append(getMyReviewId());
		sb.append(", myReviewDateCreation=");
		sb.append(getMyReviewDateCreation());
		sb.append(", myReviewDateModification=");
		sb.append(getMyReviewDateModification());
		sb.append(", myReviewArticleId=");
		sb.append(getMyReviewArticleId());
		sb.append(", MyReviewName=");
		sb.append(getMyReviewName());
		sb.append(", MyReviewContent=");
		sb.append(getMyReviewContent());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.softwerke.srv.model.MyReview");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>myReviewId</column-name><column-value><![CDATA[");
		sb.append(getMyReviewId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>myReviewDateCreation</column-name><column-value><![CDATA[");
		sb.append(getMyReviewDateCreation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>myReviewDateModification</column-name><column-value><![CDATA[");
		sb.append(getMyReviewDateModification());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>myReviewArticleId</column-name><column-value><![CDATA[");
		sb.append(getMyReviewArticleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MyReviewName</column-name><column-value><![CDATA[");
		sb.append(getMyReviewName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MyReviewContent</column-name><column-value><![CDATA[");
		sb.append(getMyReviewContent());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = MyReview.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			MyReview.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _myReviewId;
	private Date _myReviewDateCreation;
	private Date _myReviewDateModification;
	private long _myReviewArticleId;
	private String _MyReviewName;
	private String _MyReviewContent;
	private long _columnBitmask;
	private MyReview _escapedModel;
}